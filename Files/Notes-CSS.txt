CSS
    Inline: <tag style="css" />     
        <html style="background:blue">
        </html>
        #in same line with tag, useful to single element

    Internal: <style>css</style>
        <style>
            html{
                background: red;
            }
        </style>
        #apply anywhere, only to one html document, useful for single webpage, not for multipage Websites

    External: <link href="style.css" />   #most commonly used, separated file "./styles.css"
        <html>
            <head>
                <link
                    rel="stylesheet"  #relationship, what is the role of this thing(rel) we're linking to 
                    href="./styles.css" #location, where is it located.
                />
            </head>
        </html>

    ./styles.css :
        html{
                background: red;
            }

5.3 CSS Selectors:
        Element Selector:
            h1{
                color:blue          #select all h1
            }

        Class Selector:     #class--attribute
            .red-heading{
                color:red;
            }
                            #select the only element that has a class
            eg.
                index.html:
                <h2 class="red-text">Red</h2>  #only this one turns red
                <h2>Green</h2>
                <h2>Blue</h2>

                style.css:
                .red-text{
                   color:red;
                }

        Id Selector:
            #main{
                color:red       //select all element with particular id attribute
            }

            eg.
                index.html:
                <h2 id="main">Red</h2>  #only this one turns red
                <h2>Green</h2>
                <h2>Blue</h2>

                style.css:
                #main{
                   color:red;
                }
*******id vs class
*******id: one element, unique
*******class: many elements

    Attribute Selector: 
        p[draggable]{    //p:html element; draggable: attribute
            color:red    // select all p element with draggable attribute
        }

        eg.
            <p draggable="true">Drag me</p>
            <p draggable="false">Don't drag me</p>  #only this one turns red
            <p>Drag me</p>

            style.css:
                p[draggable="false"]{
                    color:red;
                }

    Universal Selector: //select all no matter what id, what attribute......
        *{
            color:red
        }


6.0
6.1
    font-size:10px;

        1px(Pixel) = 1/96th inch = 0.26mm    //*square
        1pt(Point) = 1/72nd inch = 0.35mm
        1em = 100% of parent  //relative size，以父元素为基准
        1rem = 100% of root   //relative size, 以根元素为基准，也就是整个html的size，
                              //此情况下，parent element的变化不对它产生影响

    font-weight:
        normal/bold : Keywords
        lighter/bolder ： Relative to Parent +-100
        number : 100-900 (light-bold)

    font-family:
        字体
        https://fonts.google.com/

    Text Align:
        h1{
            text-align: center
        }

7.1 Cascading Style Sheets
    Internal css style > External css style
    当同时存在internal和external的css，只采用internal

    当external css中存在对同一个元素进行两种style时，采用后一个。

    Specificity：
        eg:
            <li id="first-id" class="first-class" draggable>
            元素li同时存在三个attribute。

            li{color:blue;}
            .first-class{color:red;}
            li[draggable]{color:purple;}
            #first-id{color:orange;}
            采用最后一个。

    Type：external< internal< inline.

    Keywords: Importance:
        color: red;
        color: green !important; 表示这一条是最要紧的。这一条rule会代替上一条。

7.2 Combining Selector
    rules:
        Group = Apply to all selectors. 
        
        Child = Apply to direct child of left side
        div包含div，第一个为parent，第二个为child。

        以上两个都可以用逗号将两个selector分开。
        
        Descendant = Apply to a descendant of left side
        两个selector中间用空格隔开即可。左为ancestor，右为descendant。

        Chaining = Apply where ALL selectors are true
        selectorselector{ 

        }
        从element开始写

        Combining Combiners

7.3 CSS position 定位
    static 静态： 无定位
    relative 相对：相对于自己原来的位置进行移动
    absolute 绝对：是元素在移动位置的时候，是相对于它祖先元素来说的
        如果没有祖先元素或者祖先元素没有定位，则以浏览器为基准定位（Document 文档）。
        如果祖先元素有定位（相对、绝对、固定定位），则以【最近一级】的有定位祖先元素为参考点移动位置。
    fixed 固定：
            跟父元素没有任何关系，不随滚动条滚动。
            只认浏览器的可视窗口 —— 浏览器可视窗口 + 边偏移属性 来设置元素的位置；

    堆叠顺序（z-index）
            属性值：正整数、负整数或 0，默认值是 0，数值越大，盒子越靠上；
            如果属性值相同，则按照书写顺序，后来居上；
            数字后面不能加单位。
            z-index 只能应用于相对定位、绝对定位和固定定位的元素，其他标准流、浮动和静态定位无效。

